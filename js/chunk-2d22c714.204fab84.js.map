{"version":3,"sources":["webpack:///./src/views/WorkListEx.vue?d760","webpack:///./node_modules/linq/linq.js","webpack:///src/views/WorkListEx.vue","webpack:///./src/views/WorkListEx.vue?37ff","webpack:///./src/views/WorkListEx.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_l","item","idx","key","_s","equipment_id","name","type","accident","attrs","on","workerChange","staticRenderFns","Functions","Identity","x","True","Blank","Types","Boolean","Number","String","Object","Undefined","Function","funcCache","Utils","createLambda","expression","f","indexOf","match","regexp","RegExp","maxLength","exec","paramNumber","length","argArray","i","dollar","j","push","args","Array","prototype","join","call","expr","isIEnumerable","obj","Enumerator","e","defineProperty","defineProperties","target","methodName","value","enumerable","configurable","writable","compare","a","b","dispose","hasNativeIteratorSupport","Symbol","iterator","State","Before","Running","After","IEnumerator","initialize","tryGetNext","yielder","Yielder","state","current","moveNext","apply","yieldReturn","yieldBreak","Enumerable","getEnumerator","createEnumerable","createEnumerator","extendTo","enumerableProto","typeProto","ArrayEnumerable","from","func","recallFrom","getSource","choice","arguments","toArray","Math","floor","random","cycle","index","empty","repeat","charAt","next","done","enumerator","isFirst","atEnd","Windows","first","array","hasOwnProperty","make","element","matches","input","pattern","flags","source","regex","range","start","count","step","rangeDown","rangeTo","to","take","repeatWithFinalize","initializer","finalizer","generate","toInfinity","toNegativeInfinity","unfold","seed","defer","enumerableFactory","traverseBreadthFirst","resultSelector","nestLevel","buffer","selectMany","any","traverseDepthFirst","enumeratorStack","pop","forEach","s","flatten","middleEnumerator","pairwise","selector","prev","scan","isUseSeed","select","WhereSelectEnumerable","collectionSelector","undefined","middleSeq","where","predicate","WhereEnumerable","choose","result","ofType","typeName","zip","second","firstEnumerator","secondEnumerator","enumerators","concat","takeExceptLast","all","merge","splice","inner","outerKeySelector","innerKeySelector","compareSelector","outerEnumerator","lookup","innerElements","innerCount","toLookup","innerElement","get","groupJoin","isEmpty","insert","isEnumerated","alternate","alternateValueOrSequence","alternateSequence","alternateEnumerator","retVal","contains","defaultIfEmpty","defaultValue","distinct","except","distinctUntilChanged","compareKey","initial","keys","Dictionary","add","intersect","outs","sequenceEqual","union","orderBy","keySelector","comparer","OrderedEnumerable","orderByDescending","reverse","shuffle","weightedSample","weightSelector","sortedByBound","totalWeight","weight","bound","draw","lower","upper","groupBy","elementSelector","toEnumerable","partitionBy","hasResultSelector","group","Grouping","hasNext","aggregate","last","average","sum","max","min","maxBy","minBy","elementAt","found","Error","elementAtOrDefault","firstOrDefault","lastOrDefault","single","singleOrDefault","skip","skipWhile","isSkipEnd","takeWhile","q","shift","takeFromLast","sourceEnumerator","lastIndexOf","cast","asEnumerable","dict","Lookup","toObject","toDictionary","toJSONString","replacer","space","JSON","stringify","toJoinedString","separator","doAction","action","write","document","writeLine","writeln","force","letBind","share","sharedEnumerator","disposed","DisposableEnumerable","memoize","cache","catchError","handler","finallyAction","log","console","trace","message","descending","parent","createOrderedEnumerable","thenBy","thenByDescending","indexes","self","sortContext","SortContext","create","GenerateKeys","sort","child","orderedEnumerable","currentContext","context","len","index1","index2","comparison","prevSource","prevPredicate","composedPredicate","prevSelector","composedSelector","callHasOwnProperty","computeHashCode","toString","HashEntry","EntryList","addLast","entry","replace","newEntry","remove","countField","entryList","buckets","hash","set","clear","currentEntry","dictionary","kvp","groupKey","elements","data","dataLIst","computed","equipmentList","list","workList","watch","created","mounted","methods","component","VBtn"],"mappings":"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","file":"js/chunk-2d22c714.204fab84.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('h1',[_vm._v(\"This is an WorkListEx page\")]),_vm._l((_vm.dataLIst),function(item,idx){return _c('div',{key:idx},[_vm._v(\" 장비아이디: \"+_vm._s(item.equipment_id)+\" 장비명: \"+_vm._s(item.name)+\" 장비타입: \"+_vm._s(item.type)+\" 장비관련사고: \"+_vm._s(item.accident)+\" \")])}),_c('v-btn',{attrs:{\"elevation\":\"2\"},on:{\"click\":_vm.workerChange}},[_vm._v(\"worker change\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","﻿/*--------------------------------------------------------------------------\r\n * linq.js - LINQ for JavaScript\r\n * licensed under MIT License\r\n *------------------------------------------------------------------------*/\r\n\r\n// ReadOnly Function\r\nvar Functions = {\r\n    Identity: function (x) { return x; },\r\n    True: function () { return true; },\r\n    Blank: function () { }\r\n};\r\n\r\n// const Type\r\nvar Types = {\r\n    Boolean: typeof true,\r\n    Number: typeof 0,\r\n    String: typeof \"\",\r\n    Object: typeof {},\r\n    Undefined: typeof undefined,\r\n    Function: typeof function () { }\r\n};\r\n\r\n// createLambda cache\r\nvar funcCache = { \"\": Functions.Identity };\r\n\r\n// private utility methods\r\nvar Utils = {\r\n    // Create anonymous function from lambda expression string\r\n    createLambda: function (expression) {\r\n        if (expression == null) return Functions.Identity;\r\n        if (typeof expression === Types.String) {\r\n            // get from cache\r\n            var f = funcCache[expression];\r\n            if (f != null) {\r\n                return f;\r\n            }\r\n\r\n            if (expression.indexOf(\"=>\") === -1) {\r\n                var regexp = new RegExp(\"[$]+\", \"g\");\r\n\r\n                var maxLength = 0;\r\n                var match;\r\n                while ((match = regexp.exec(expression)) != null) {\r\n                    var paramNumber = match[0].length;\r\n                    if (paramNumber > maxLength) {\r\n                        maxLength = paramNumber;\r\n                    }\r\n                }\r\n\r\n                var argArray = [];\r\n                for (var i = 1; i <= maxLength; i++) {\r\n                    var dollar = \"\";\r\n                    for (var j = 0; j < i; j++) {\r\n                        dollar += \"$\";\r\n                    }\r\n                    argArray.push(dollar);\r\n                }\r\n\r\n                var args = Array.prototype.join.call(argArray, \",\");\r\n\r\n                f = new Function(args, \"return \" + expression);\r\n                funcCache[expression] = f;\r\n                return f;\r\n            }\r\n            else {\r\n                var expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n                f = new Function(expr[1], (expr[2].match(/\\breturn\\b/) ? expr[2] : \"return \" + expr[2]));\r\n                funcCache[expression] = f;\r\n                return f;\r\n            }\r\n        }\r\n        return expression;\r\n    },\r\n\r\n    isIEnumerable: function (obj) {\r\n        if (typeof Enumerator !== Types.Undefined) {\r\n            try {\r\n                new Enumerator(obj); // check JScript(IE)'s Enumerator\r\n                return true;\r\n            }\r\n            catch (e) { }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    // IE8's defineProperty is defined but cannot use, therefore check defineProperties\r\n    defineProperty: (Object.defineProperties != null)\r\n        ? function (target, methodName, value) {\r\n            Object.defineProperty(target, methodName, {\r\n                enumerable: false,\r\n                configurable: true,\r\n                writable: true,\r\n                value: value\r\n            })\r\n        }\r\n        : function (target, methodName, value) {\r\n            target[methodName] = value;\r\n        },\r\n\r\n    compare: function (a, b) {\r\n        return (a === b) ? 0\r\n                : (a > b) ? 1\r\n                : -1;\r\n    },\r\n\r\n    dispose: function (obj) {\r\n        if (obj != null) obj.dispose();\r\n    },\r\n\r\n    hasNativeIteratorSupport: function () {\r\n        return typeof Symbol !== 'undefined' && typeof Symbol.iterator !== 'undefined';\r\n    }\r\n};\r\n\r\n// IEnumerator State\r\nvar State = { Before: 0, Running: 1, After: 2 };\r\n\r\n// \"Enumerator\" is conflict JScript's \"Enumerator\"\r\nvar IEnumerator = function (initialize, tryGetNext, dispose) {\r\n    var yielder = new Yielder();\r\n    var state = State.Before;\r\n\r\n    this.current = yielder.current;\r\n\r\n    this.moveNext = function () {\r\n        try {\r\n            switch (state) {\r\n                case State.Before:\r\n                    state = State.Running;\r\n                    initialize();\r\n                    // fall through\r\n                case State.Running:\r\n                    if (tryGetNext.apply(yielder)) {\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.dispose();\r\n                        return false;\r\n                    }\r\n                case State.After:\r\n                    return false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.dispose();\r\n            throw e;\r\n        }\r\n    };\r\n\r\n    this.dispose = function () {\r\n        if (state != State.Running) return;\r\n\r\n        try {\r\n            dispose();\r\n        }\r\n        finally {\r\n            state = State.After;\r\n        }\r\n    };\r\n};\r\n\r\n// for tryGetNext\r\nvar Yielder = function () {\r\n    var current = null;\r\n    this.current = function () { return current; };\r\n    this.yieldReturn = function (value) {\r\n        current = value;\r\n        return true;\r\n    };\r\n    this.yieldBreak = function () {\r\n        return false;\r\n    };\r\n};\r\n\r\n// Enumerable constuctor\r\nvar Enumerable = function (getEnumerator) {\r\n    this.getEnumerator = getEnumerator;\r\n};\r\n\r\n// Utility\r\n\r\nEnumerable.Utils = {}; // container\r\n\r\nEnumerable.Utils.createLambda = function (expression) {\r\n    return Utils.createLambda(expression);\r\n};\r\n\r\nEnumerable.Utils.createEnumerable = function (getEnumerator) {\r\n    return new Enumerable(getEnumerator);\r\n};\r\n\r\nEnumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\r\n    return new IEnumerator(initialize, tryGetNext, dispose);\r\n};\r\n\r\nEnumerable.Utils.extendTo = function (type) {\r\n    var typeProto = type.prototype;\r\n    var enumerableProto;\r\n\r\n    if (type === Array) {\r\n        enumerableProto = ArrayEnumerable.prototype;\r\n        Utils.defineProperty(typeProto, \"getSource\", function () {\r\n            return this;\r\n        });\r\n    }\r\n    else {\r\n        enumerableProto = Enumerable.prototype;\r\n        Utils.defineProperty(typeProto, \"getEnumerator\", function () {\r\n            return Enumerable.from(this).getEnumerator();\r\n        });\r\n    }\r\n\r\n    for (var methodName in enumerableProto) {\r\n        var func = enumerableProto[methodName];\r\n\r\n        // already extended\r\n        if (typeProto[methodName] == func) continue;\r\n\r\n        // already defined(example Array#reverse/join/forEach...)\r\n        if (typeProto[methodName] != null) {\r\n            methodName = methodName + \"ByLinq\";\r\n            if (typeProto[methodName] == func) continue; // recheck\r\n        }\r\n\r\n        if (func instanceof Function) {\r\n            Utils.defineProperty(typeProto, methodName, func);\r\n        }\r\n    }\r\n};\r\n\r\nEnumerable.Utils.recallFrom = function (type) {\r\n    var typeProto = type.prototype;\r\n    var enumerableProto;\r\n\r\n    if (type === Array) {\r\n        enumerableProto = ArrayEnumerable.prototype;\r\n        delete typeProto.getSource;\r\n    }\r\n    else {\r\n        enumerableProto = Enumerable.prototype;\r\n        delete typeProto.getEnumerator;\r\n    }\r\n\r\n    for (var methodName in enumerableProto) {\r\n        var func = enumerableProto[methodName];\r\n\r\n        if (typeProto[methodName + 'ByLinq']) {\r\n            delete typeProto[methodName + 'ByLinq'];\r\n        }\r\n        else if (typeProto[methodName] == func && func instanceof Function) {\r\n            delete typeProto[methodName];\r\n        }\r\n    }\r\n};\r\n\r\n// Generator\r\n\r\nEnumerable.choice = function () // variable argument\r\n{\r\n    var args = arguments;\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            function () {\r\n                args = (args[0] instanceof Array) ? args[0]\r\n                    : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                    : args;\r\n            },\r\n            function () {\r\n                return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.cycle = function () // variable argument\r\n{\r\n    var args = arguments;\r\n\r\n    return new Enumerable(function () {\r\n        var index = 0;\r\n        return new IEnumerator(\r\n            function () {\r\n                args = (args[0] instanceof Array) ? args[0]\r\n                    : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                    : args;\r\n            },\r\n            function () {\r\n                if (index >= args.length) index = 0;\r\n                return this.yieldReturn(args[index++]);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.empty = function () {\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return false; },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.from = function (obj) {\r\n    if (obj == null) {\r\n        return Enumerable.empty();\r\n    }\r\n    if (obj instanceof Enumerable) {\r\n        return obj;\r\n    }\r\n    if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\r\n        return Enumerable.repeat(obj, 1);\r\n    }\r\n    if (typeof obj == Types.String) {\r\n        return new Enumerable(function () {\r\n            var index = 0;\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () {\r\n                    return (index < obj.length) ? this.yieldReturn(obj.charAt(index++)) : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    }\r\n    if (typeof obj != Types.Function) {\r\n        // array or array like object\r\n        if (typeof obj.length == Types.Number) {\r\n            return new ArrayEnumerable(obj);\r\n        }\r\n\r\n        // iterable object\r\n        if (typeof Symbol !== 'undefined' && typeof obj[Symbol.iterator] !== 'undefined') {\r\n            return new Enumerable(function () {\r\n                return new IEnumerator(\r\n                    Functions.Blank,\r\n                    function () {\r\n                        var next = obj.next();\r\n                        return (next.done ? false : (this.yieldReturn(next.value)));\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n\r\n        // JScript's IEnumerable\r\n        if (!(obj instanceof Object) && Utils.isIEnumerable(obj)) {\r\n            return new Enumerable(function () {\r\n                var isFirst = true;\r\n                var enumerator;\r\n                return new IEnumerator(\r\n                    function () { enumerator = new Enumerator(obj); },\r\n                    function () {\r\n                        if (isFirst) isFirst = false;\r\n                        else enumerator.moveNext();\r\n\r\n                        return (enumerator.atEnd()) ? false : this.yieldReturn(enumerator.item());\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n\r\n        // WinMD IIterable<T>\r\n        if (typeof Windows === Types.Object && typeof obj.first === Types.Function) {\r\n            return new Enumerable(function () {\r\n                var isFirst = true;\r\n                var enumerator;\r\n                return new IEnumerator(\r\n                    function () { enumerator = obj.first(); },\r\n                    function () {\r\n                        if (isFirst) isFirst = false;\r\n                        else enumerator.moveNext();\r\n\r\n                        return (enumerator.hasCurrent) ? this.yieldReturn(enumerator.current) : this.yieldBreak();\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n    }\r\n\r\n    // case function/object : Create keyValuePair[]\r\n    return new Enumerable(function () {\r\n        var array = [];\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                for (var key in obj) {\r\n                    var value = obj[key];\r\n                    if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                        array.push({ key: key, value: value });\r\n                    }\r\n                }\r\n            },\r\n            function () {\r\n                return (index < array.length)\r\n                    ? this.yieldReturn(array[index++])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n},\r\n\r\nEnumerable.make = function (element) {\r\n    return Enumerable.repeat(element, 1);\r\n};\r\n\r\n// Overload:function(input, pattern)\r\n// Overload:function(input, pattern, flags)\r\nEnumerable.matches = function (input, pattern, flags) {\r\n    if (flags == null) flags = \"\";\r\n    if (pattern instanceof RegExp) {\r\n        flags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n        flags += (pattern.multiline) ? \"m\" : \"\";\r\n        pattern = pattern.source;\r\n    }\r\n    if (flags.indexOf(\"g\") === -1) flags += \"g\";\r\n\r\n    return new Enumerable(function () {\r\n        var regex;\r\n        return new IEnumerator(\r\n            function () { regex = new RegExp(pattern, flags); },\r\n            function () {\r\n                var match = regex.exec(input);\r\n                return (match) ? this.yieldReturn(match) : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, count)\r\n// Overload:function(start, count, step)\r\nEnumerable.range = function (start, count, step) {\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { value = start - step; },\r\n            function () {\r\n                return (index++ < count)\r\n                    ? this.yieldReturn(value += step)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, count)\r\n// Overload:function(start, count, step)\r\nEnumerable.rangeDown = function (start, count, step) {\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { value = start + step; },\r\n            function () {\r\n                return (index++ < count)\r\n                    ? this.yieldReturn(value -= step)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function(start, to)\r\n// Overload:function(start, to, step)\r\nEnumerable.rangeTo = function (start, to, step) {\r\n    if (step == null) step = 1;\r\n\r\n    if (start < to) {\r\n        return new Enumerable(function () {\r\n            var value;\r\n\r\n            return new IEnumerator(\r\n            function () { value = start - step; },\r\n            function () {\r\n                var next = value += step;\r\n                return (next <= to)\r\n                    ? this.yieldReturn(next)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n        });\r\n    }\r\n    else {\r\n        return new Enumerable(function () {\r\n            var value;\r\n\r\n            return new IEnumerator(\r\n            function () { value = start + step; },\r\n            function () {\r\n                var next = value -= step;\r\n                return (next >= to)\r\n                    ? this.yieldReturn(next)\r\n                    : this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n        });\r\n    }\r\n};\r\n\r\n// Overload:function(element)\r\n// Overload:function(element, count)\r\nEnumerable.repeat = function (element, count) {\r\n    if (count != null) return Enumerable.repeat(element).take(count);\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return this.yieldReturn(element); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.repeatWithFinalize = function (initializer, finalizer) {\r\n    initializer = Utils.createLambda(initializer);\r\n    finalizer = Utils.createLambda(finalizer);\r\n\r\n    return new Enumerable(function () {\r\n        var element;\r\n        return new IEnumerator(\r\n            function () { element = initializer(); },\r\n            function () { return this.yieldReturn(element); },\r\n            function () {\r\n                if (element != null) {\r\n                    finalizer(element);\r\n                    element = null;\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, count)\r\nEnumerable.generate = function (func, count) {\r\n    if (count != null) return Enumerable.generate(func).take(count);\r\n    func = Utils.createLambda(func);\r\n\r\n    return new Enumerable(function () {\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () { return this.yieldReturn(func()); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(start)\r\n// Overload:function(start, step)\r\nEnumerable.toInfinity = function (start, step) {\r\n    if (start == null) start = 0;\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        return new IEnumerator(\r\n            function () { value = start - step; },\r\n            function () { return this.yieldReturn(value += step); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(start)\r\n// Overload:function(start, step)\r\nEnumerable.toNegativeInfinity = function (start, step) {\r\n    if (start == null) start = 0;\r\n    if (step == null) step = 1;\r\n\r\n    return new Enumerable(function () {\r\n        var value;\r\n        return new IEnumerator(\r\n            function () { value = start + step; },\r\n            function () { return this.yieldReturn(value -= step); },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.unfold = function (seed, func) {\r\n    func = Utils.createLambda(func);\r\n\r\n    return new Enumerable(function () {\r\n        var isFirst = true;\r\n        var value;\r\n        return new IEnumerator(\r\n            Functions.Blank,\r\n            function () {\r\n                if (isFirst) {\r\n                    isFirst = false;\r\n                    value = seed;\r\n                    return this.yieldReturn(value);\r\n                }\r\n                value = func(value);\r\n                return this.yieldReturn(value);\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.defer = function (enumerableFactory) {\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = Enumerable.from(enumerableFactory()).getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : this.yieldBreak();\r\n            },\r\n            function () {\r\n                Utils.dispose(enumerator);\r\n            });\r\n    });\r\n};\r\n\r\n// Extension Methods\r\n\r\n/* Projection and Filtering Methods */\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, resultSelector<element>)\r\n// Overload:function(func, resultSelector<element, nestLevel>)\r\nEnumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\r\n    var source = this;\r\n    func = Utils.createLambda(func);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var nestLevel = 0;\r\n        var buffer = [];\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (enumerator.moveNext()) {\r\n                        buffer.push(enumerator.current());\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\r\n                    }\r\n\r\n                    var next = Enumerable.from(buffer).selectMany(function (x) { return func(x); });\r\n                    if (!next.any()) {\r\n                        return false;\r\n                    }\r\n                    else {\r\n                        nestLevel++;\r\n                        buffer = [];\r\n                        Utils.dispose(enumerator);\r\n                        enumerator = next.getEnumerator();\r\n                    }\r\n                }\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(func, resultSelector<element>)\r\n// Overload:function(func, resultSelector<element, nestLevel>)\r\nEnumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\r\n    var source = this;\r\n    func = Utils.createLambda(func);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumeratorStack = [];\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (enumerator.moveNext()) {\r\n                        var value = resultSelector(enumerator.current(), enumeratorStack.length);\r\n                        enumeratorStack.push(enumerator);\r\n                        enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\r\n                        return this.yieldReturn(value);\r\n                    }\r\n\r\n                    if (enumeratorStack.length <= 0) return false;\r\n                    Utils.dispose(enumerator);\r\n                    enumerator = enumeratorStack.pop();\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Enumerable.from(enumeratorStack).forEach(function (s) { s.dispose(); });\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.flatten = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var middleEnumerator = null;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (true) {\r\n                    if (middleEnumerator != null) {\r\n                        if (middleEnumerator.moveNext()) {\r\n                            return this.yieldReturn(middleEnumerator.current());\r\n                        }\r\n                        else {\r\n                            middleEnumerator = null;\r\n                        }\r\n                    }\r\n\r\n                    if (enumerator.moveNext()) {\r\n                        if (enumerator.current() instanceof Array) {\r\n                            Utils.dispose(middleEnumerator);\r\n                            middleEnumerator = Enumerable.from(enumerator.current())\r\n                                .selectMany(Functions.Identity)\r\n                                .flatten()\r\n                                .getEnumerator();\r\n                            continue;\r\n                        }\r\n                        else {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(middleEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.pairwise = function (selector) {\r\n    var source = this;\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                enumerator.moveNext();\r\n            },\r\n            function () {\r\n                var prev = enumerator.current();\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(selector(prev, enumerator.current()))\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(func)\r\n// Overload:function(seed,func<value,element>)\r\nEnumerable.prototype.scan = function (seed, func) {\r\n    var isUseSeed;\r\n    if (func == null) {\r\n        func = Utils.createLambda(seed); // arguments[0]\r\n        isUseSeed = false;\r\n    } else {\r\n        func = Utils.createLambda(func);\r\n        isUseSeed = true;\r\n    }\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var value;\r\n        var isFirst = true;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (isFirst) {\r\n                    isFirst = false;\r\n                    if (!isUseSeed) {\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(value = enumerator.current());\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.yieldReturn(value = seed);\r\n                    }\r\n                }\r\n\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(value = func(value, enumerator.current()))\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(selector<element>)\r\n// Overload:function(selector<element,index>)\r\nEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    if (selector.length <= 1) {\r\n        return new WhereSelectEnumerable(this, null, selector);\r\n    }\r\n    else {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(selector(enumerator.current(), index++))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    }\r\n};\r\n\r\n// Overload:function(collectionSelector<element>)\r\n// Overload:function(collectionSelector<element,index>)\r\n// Overload:function(collectionSelector<element>,resultSelector)\r\n// Overload:function(collectionSelector<element,index>,resultSelector)\r\nEnumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\r\n    var source = this;\r\n    collectionSelector = Utils.createLambda(collectionSelector);\r\n    if (resultSelector == null) resultSelector = function (a, b) { return b; };\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var middleEnumerator = undefined;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (middleEnumerator === undefined) {\r\n                    if (!enumerator.moveNext()) return false;\r\n                }\r\n                do {\r\n                    if (middleEnumerator == null) {\r\n                        var middleSeq = collectionSelector(enumerator.current(), index++);\r\n                        middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\r\n                    }\r\n                    if (middleEnumerator.moveNext()) {\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\r\n                    }\r\n                    Utils.dispose(middleEnumerator);\r\n                    middleEnumerator = null;\r\n                } while (enumerator.moveNext());\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(middleEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    if (predicate.length <= 1) {\r\n        return new WhereEnumerable(this, predicate);\r\n    }\r\n    else {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        if (predicate(enumerator.current(), index++)) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Overload:function(selector<element>)\r\n// Overload:function(selector<element,index>)\r\nEnumerable.prototype.choose = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    var result = selector(enumerator.current(), index++);\r\n                    if (result != null) {\r\n                        return this.yieldReturn(result);\r\n                    }\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.ofType = function (type) {\r\n    var typeName;\r\n    switch (type) {\r\n        case Number:\r\n            typeName = Types.Number;\r\n            break;\r\n        case String:\r\n            typeName = Types.String;\r\n            break;\r\n        case Boolean:\r\n            typeName = Types.Boolean;\r\n            break;\r\n        case Function:\r\n            typeName = Types.Function;\r\n            break;\r\n        default:\r\n            typeName = null;\r\n            break;\r\n    }\r\n    return (typeName === null)\r\n        ? this.where(function (x) { return x instanceof type; })\r\n        : this.where(function (x) { return typeof x === typeName; });\r\n};\r\n\r\n// mutiple arguments, last one is selector, others are enumerable\r\nEnumerable.prototype.zip = function () {\r\n    var args = arguments;\r\n    var selector = Utils.createLambda(arguments[arguments.length - 1]);\r\n\r\n    var source = this;\r\n    // optimized case:argument is 2\r\n    if (arguments.length == 2) {\r\n        var second = arguments[0];\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n            function () {\r\n                firstEnumerator = source.getEnumerator();\r\n                secondEnumerator = Enumerable.from(second).getEnumerator();\r\n            },\r\n            function () {\r\n                if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\r\n                    return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\r\n                }\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                } finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n            function () {\r\n                var array = Enumerable.make(source)\r\n                    .concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from))\r\n                    .select(function (x) { return x.getEnumerator() })\r\n                    .toArray();\r\n                enumerators = Enumerable.from(array);\r\n            },\r\n            function () {\r\n                if (enumerators.all(function (x) { return x.moveNext() })) {\r\n                    var array = enumerators\r\n                        .select(function (x) { return x.current() })\r\n                        .toArray();\r\n                    array.push(index++);\r\n                    return this.yieldReturn(selector.apply(null, array));\r\n                }\r\n                else {\r\n                    return this.yieldBreak();\r\n                }\r\n            },\r\n            function () {\r\n                Enumerable.from(enumerators).forEach(Utils.dispose);\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\n// mutiple arguments\r\nEnumerable.prototype.merge = function () {\r\n    var args = arguments;\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerators;\r\n        var index = -1;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerators = Enumerable.make(source)\r\n                    .concat(Enumerable.from(args).select(Enumerable.from))\r\n                    .select(function (x) { return x.getEnumerator() })\r\n                    .toArray();\r\n            },\r\n            function () {\r\n                while (enumerators.length > 0) {\r\n                    index = (index >= enumerators.length - 1) ? 0 : index + 1;\r\n                    var enumerator = enumerators[index];\r\n\r\n                    if (enumerator.moveNext()) {\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    else {\r\n                        enumerator.dispose();\r\n                        enumerators.splice(index--, 1);\r\n                    }\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () {\r\n                Enumerable.from(enumerators).forEach(Utils.dispose);\r\n            });\r\n    });\r\n};\r\n\r\n/* Join Methods */\r\n\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\nEnumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n    outerKeySelector = Utils.createLambda(outerKeySelector);\r\n    innerKeySelector = Utils.createLambda(innerKeySelector);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var outerEnumerator;\r\n        var lookup;\r\n        var innerElements = null;\r\n        var innerCount = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                outerEnumerator = source.getEnumerator();\r\n                lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n            },\r\n            function () {\r\n                while (true) {\r\n                    if (innerElements != null) {\r\n                        var innerElement = innerElements[innerCount++];\r\n                        if (innerElement !== undefined) {\r\n                            return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n                        }\r\n\r\n                        innerElement = null;\r\n                        innerCount = 0;\r\n                    }\r\n\r\n                    if (outerEnumerator.moveNext()) {\r\n                        var key = outerKeySelector(outerEnumerator.current());\r\n                        innerElements = lookup.get(key).toArray();\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }\r\n            },\r\n            function () { Utils.dispose(outerEnumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n// Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\nEnumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n    outerKeySelector = Utils.createLambda(outerKeySelector);\r\n    innerKeySelector = Utils.createLambda(innerKeySelector);\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator = source.getEnumerator();\r\n        var lookup = null;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n            },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    var innerElement = lookup.get(outerKeySelector(enumerator.current()));\r\n                    return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n/* Set Methods */\r\n\r\nEnumerable.prototype.all = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    var result = true;\r\n    this.forEach(function (x) {\r\n        if (!predicate(x)) {\r\n            result = false;\r\n            return false; // break\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.any = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        if (arguments.length == 0) return enumerator.moveNext(); // case:function()\r\n\r\n        while (enumerator.moveNext()) // case:function(predicate)\r\n        {\r\n            if (predicate(enumerator.current())) return true;\r\n        }\r\n        return false;\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.isEmpty = function () {\r\n    return !this.any();\r\n};\r\n\r\n// multiple arguments\r\nEnumerable.prototype.concat = function () {\r\n    var source = this;\r\n\r\n    if (arguments.length == 1) {\r\n        var second = arguments[0];\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n\r\n            return new IEnumerator(\r\n            function () { firstEnumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (secondEnumerator == null) {\r\n                    if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                }\r\n                if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        var args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerators = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    while (enumerators.length > 0) {\r\n                        var enumerator = enumerators[0];\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        else {\r\n                            enumerator.dispose();\r\n                            enumerators.splice(0, 1);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n        });\r\n    }\r\n};\r\n\r\nEnumerable.prototype.insert = function (index, second) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var firstEnumerator;\r\n        var secondEnumerator;\r\n        var count = 0;\r\n        var isEnumerated = false;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                firstEnumerator = source.getEnumerator();\r\n                secondEnumerator = Enumerable.from(second).getEnumerator();\r\n            },\r\n            function () {\r\n                if (count == index && secondEnumerator.moveNext()) {\r\n                    isEnumerated = true;\r\n                    return this.yieldReturn(secondEnumerator.current());\r\n                }\r\n                if (firstEnumerator.moveNext()) {\r\n                    count++;\r\n                    return this.yieldReturn(firstEnumerator.current());\r\n                }\r\n                if (!isEnumerated && secondEnumerator.moveNext()) {\r\n                    return this.yieldReturn(secondEnumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.alternate = function (alternateValueOrSequence) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n        var enumerator;\r\n        var alternateSequence;\r\n        var alternateEnumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\r\n                    alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\r\n                }\r\n                else {\r\n                    alternateSequence = Enumerable.make(alternateValueOrSequence);\r\n                }\r\n                enumerator = source.getEnumerator();\r\n                if (enumerator.moveNext()) buffer = enumerator.current();\r\n            },\r\n            function () {\r\n                while (true) {\r\n                    if (alternateEnumerator != null) {\r\n                        if (alternateEnumerator.moveNext()) {\r\n                            return this.yieldReturn(alternateEnumerator.current());\r\n                        }\r\n                        else {\r\n                            alternateEnumerator = null;\r\n                        }\r\n                    }\r\n\r\n                    if (buffer == null && enumerator.moveNext()) {\r\n                        buffer = enumerator.current(); // hasNext\r\n                        alternateEnumerator = alternateSequence.getEnumerator();\r\n                        continue; // GOTO\r\n                    }\r\n                    else if (buffer != null) {\r\n                        var retVal = buffer;\r\n                        buffer = null;\r\n                        return this.yieldReturn(retVal);\r\n                    }\r\n\r\n                    return this.yieldBreak();\r\n                }\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(alternateEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n// Overload:function(value)\r\n// Overload:function(value, compareSelector)\r\nEnumerable.prototype.contains = function (value, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        while (enumerator.moveNext()) {\r\n            if (compareSelector(enumerator.current()) === value) return true;\r\n        }\r\n        return false;\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.defaultIfEmpty = function (defaultValue) {\r\n    var source = this;\r\n    if (defaultValue === undefined) defaultValue = null;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var isFirst = true;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    isFirst = false;\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                else if (isFirst) {\r\n                    isFirst = false;\r\n                    return this.yieldReturn(defaultValue);\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(compareSelector)\r\nEnumerable.prototype.distinct = function (compareSelector) {\r\n    return this.except(Enumerable.empty(), compareSelector);\r\n};\r\n\r\nEnumerable.prototype.distinctUntilChanged = function (compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var compareKey;\r\n        var initial;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    var key = compareSelector(enumerator.current());\r\n\r\n                    if (initial) {\r\n                        initial = false;\r\n                        compareKey = key;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n\r\n                    if (compareKey === key) {\r\n                        continue;\r\n                    }\r\n\r\n                    compareKey = key;\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                return this.yieldBreak();\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.except = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var keys;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                keys = new Dictionary(compareSelector);\r\n                Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    var current = enumerator.current();\r\n                    if (!keys.contains(current)) {\r\n                        keys.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.intersect = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var keys;\r\n        var outs;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n\r\n                keys = new Dictionary(compareSelector);\r\n                Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                outs = new Dictionary(compareSelector);\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    var current = enumerator.current();\r\n                    if (!outs.contains(current) && keys.contains(current)) {\r\n                        outs.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(second)\r\n// Overload:function(second, compareSelector)\r\nEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var firstEnumerator = this.getEnumerator();\r\n    try {\r\n        var secondEnumerator = Enumerable.from(second).getEnumerator();\r\n        try {\r\n            while (firstEnumerator.moveNext()) {\r\n                if (!secondEnumerator.moveNext()\r\n                || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            if (secondEnumerator.moveNext()) return false;\r\n            return true;\r\n        }\r\n        finally {\r\n            Utils.dispose(secondEnumerator);\r\n        }\r\n    }\r\n    finally {\r\n        Utils.dispose(firstEnumerator);\r\n    }\r\n};\r\n\r\nEnumerable.prototype.union = function (second, compareSelector) {\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var firstEnumerator;\r\n        var secondEnumerator;\r\n        var keys;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                firstEnumerator = source.getEnumerator();\r\n                keys = new Dictionary(compareSelector);\r\n            },\r\n            function () {\r\n                var current;\r\n                if (secondEnumerator === undefined) {\r\n                    while (firstEnumerator.moveNext()) {\r\n                        current = firstEnumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                }\r\n                while (secondEnumerator.moveNext()) {\r\n                    current = secondEnumerator.current();\r\n                    if (!keys.contains(current)) {\r\n                        keys.add(current);\r\n                        return this.yieldReturn(current);\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(firstEnumerator);\r\n                }\r\n                finally {\r\n                    Utils.dispose(secondEnumerator);\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n/* Ordering Methods */\r\n\r\nEnumerable.prototype.orderBy = function (keySelector, comparer) {\r\n    return new OrderedEnumerable(this, keySelector, comparer, false);\r\n};\r\n\r\nEnumerable.prototype.orderByDescending = function (keySelector, comparer) {\r\n    return new OrderedEnumerable(this, keySelector, comparer, true);\r\n};\r\n\r\nEnumerable.prototype.reverse = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                buffer = source.toArray();\r\n                index = buffer.length;\r\n            },\r\n            function () {\r\n                return (index > 0)\r\n                    ? this.yieldReturn(buffer[--index])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.shuffle = function () {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var buffer;\r\n\r\n        return new IEnumerator(\r\n            function () { buffer = source.toArray(); },\r\n            function () {\r\n                if (buffer.length > 0) {\r\n                    var i = Math.floor(Math.random() * buffer.length);\r\n                    return this.yieldReturn(buffer.splice(i, 1)[0]);\r\n                }\r\n                return false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.weightedSample = function (weightSelector) {\r\n    weightSelector = Utils.createLambda(weightSelector);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var sortedByBound;\r\n        var totalWeight = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                sortedByBound = source\r\n                    .choose(function (x) {\r\n                        var weight = weightSelector(x);\r\n                        if (weight <= 0) return null; // ignore 0\r\n\r\n                        totalWeight += weight;\r\n                        return { value: x, bound: totalWeight };\r\n                    })\r\n                    .toArray();\r\n            },\r\n            function () {\r\n                if (sortedByBound.length > 0) {\r\n                    var draw = Math.floor(Math.random() * totalWeight) + 1;\r\n\r\n                    var lower = -1;\r\n                    var upper = sortedByBound.length;\r\n                    while (upper - lower > 1) {\r\n                        var index = Math.floor((lower + upper) / 2);\r\n                        if (sortedByBound[index].bound >= draw) {\r\n                            upper = index;\r\n                        }\r\n                        else {\r\n                            lower = index;\r\n                        }\r\n                    }\r\n\r\n                    return this.yieldReturn(sortedByBound[upper].value);\r\n                }\r\n\r\n                return this.yieldBreak();\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\n/* Grouping Methods */\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector,elementSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\nEnumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n    var source = this;\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.toLookup(keySelector, elementSelector, compareSelector)\r\n                    .toEnumerable()\r\n                    .getEnumerator();\r\n            },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    return (resultSelector == null)\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector,elementSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector)\r\n// Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\nEnumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n\r\n    var source = this;\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n    var hasResultSelector;\r\n    if (resultSelector == null) {\r\n        hasResultSelector = false;\r\n        resultSelector = function (key, group) { return new Grouping(key, group); };\r\n    }\r\n    else {\r\n        hasResultSelector = true;\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n    }\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var key;\r\n        var compareKey;\r\n        var group = [];\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                if (enumerator.moveNext()) {\r\n                    key = keySelector(enumerator.current());\r\n                    compareKey = compareSelector(key);\r\n                    group.push(elementSelector(enumerator.current()));\r\n                }\r\n            },\r\n            function () {\r\n                var hasNext;\r\n                while ((hasNext = enumerator.moveNext()) == true) {\r\n                    if (compareKey === compareSelector(keySelector(enumerator.current()))) {\r\n                        group.push(elementSelector(enumerator.current()));\r\n                    }\r\n                    else break;\r\n                }\r\n\r\n                if (group.length > 0) {\r\n                    var result = (hasResultSelector)\r\n                        ? resultSelector(key, Enumerable.from(group))\r\n                        : resultSelector(key, group);\r\n                    if (hasNext) {\r\n                        key = keySelector(enumerator.current());\r\n                        compareKey = compareSelector(key);\r\n                        group = [elementSelector(enumerator.current())];\r\n                    }\r\n                    else group = [];\r\n\r\n                    return this.yieldReturn(result);\r\n                }\r\n\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.buffer = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                var array = [];\r\n                var index = 0;\r\n                while (enumerator.moveNext()) {\r\n                    array.push(enumerator.current());\r\n                    if (++index >= count) return this.yieldReturn(array);\r\n                }\r\n                if (array.length > 0) return this.yieldReturn(array);\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n/* Aggregate Methods */\r\n\r\n// Overload:function(func)\r\n// Overload:function(seed,func)\r\n// Overload:function(seed,func,resultSelector)\r\nEnumerable.prototype.aggregate = function (seed, func, resultSelector) {\r\n    resultSelector = Utils.createLambda(resultSelector);\r\n    return resultSelector(this.scan(seed, func, resultSelector).last());\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.average = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    var sum = 0;\r\n    var count = 0;\r\n    this.forEach(function (x) {\r\n        sum += selector(x);\r\n        ++count;\r\n    });\r\n\r\n    return sum / count;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.count = function (predicate) {\r\n    predicate = (predicate == null) ? Functions.True : Utils.createLambda(predicate);\r\n\r\n    var count = 0;\r\n    this.forEach(function (x, i) {\r\n        if (predicate(x, i))++count;\r\n    });\r\n    return count;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.max = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(function (a, b) { return (a > b) ? a : b; });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.min = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(function (a, b) { return (a < b) ? a : b; });\r\n};\r\n\r\nEnumerable.prototype.maxBy = function (keySelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    return this.aggregate(function (a, b) { return (keySelector(a) > keySelector(b)) ? a : b; });\r\n};\r\n\r\nEnumerable.prototype.minBy = function (keySelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    return this.aggregate(function (a, b) { return (keySelector(a) < keySelector(b)) ? a : b; });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.sum = function (selector) {\r\n    if (selector == null) selector = Functions.Identity;\r\n    return this.select(selector).aggregate(0, function (a, b) { return a + b; });\r\n};\r\n\r\n/* Paging Methods */\r\n\r\nEnumerable.prototype.elementAt = function (index) {\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x, i) {\r\n        if (i == index) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x, i) {\r\n        if (i == index) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.first = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).first();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        value = x;\r\n        found = true;\r\n        return false;\r\n    });\r\n\r\n    if (!found) throw new Error(\"first:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n            return this.where(predicate).firstOrDefault(undefined, defaultValue);\r\n        }\r\n        defaultValue = predicate;\r\n    }\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        value = x;\r\n        found = true;\r\n        return false;\r\n    });\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.last = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).last();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        found = true;\r\n        value = x;\r\n    });\r\n\r\n    if (!found) throw new Error(\"last:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\nEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        if (typeof predicate === Types.Function || typeof Utils.createLambda(predicate) === Types.Function) {\r\n            return this.where(predicate).lastOrDefault(undefined, defaultValue);\r\n        }\r\n        defaultValue = predicate;\r\n    }\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        found = true;\r\n        value = x;\r\n    });\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(predicate)\r\nEnumerable.prototype.single = function (predicate) {\r\n    if (predicate != null) return this.where(predicate).single();\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        if (!found) {\r\n            found = true;\r\n            value = x;\r\n        } else throw new Error(\"single:sequence contains more than one element.\");\r\n    });\r\n\r\n    if (!found) throw new Error(\"single:No element satisfies the condition.\");\r\n    return value;\r\n};\r\n\r\n// Overload:function(defaultValue)\r\n// Overload:function(defaultValue,predicate)\r\nEnumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\r\n\r\n    var value;\r\n    var found = false;\r\n    this.forEach(function (x) {\r\n        if (!found) {\r\n            found = true;\r\n            value = x;\r\n        } else throw new Error(\"single:sequence contains more than one element.\");\r\n    });\r\n\r\n    return (!found) ? defaultValue : value;\r\n};\r\n\r\nEnumerable.prototype.skip = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = source.getEnumerator();\r\n                while (index++ < count && enumerator.moveNext()) {\r\n                }\r\n                ;\r\n            },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.skipWhile = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n        var isSkipEnd = false;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (!isSkipEnd) {\r\n                    if (enumerator.moveNext()) {\r\n                        if (!predicate(enumerator.current(), index++)) {\r\n                            isSkipEnd = true;\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        continue;\r\n                    } else return false;\r\n                }\r\n\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.take = function (count) {\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (index++ < count && enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); }\r\n        );\r\n    });\r\n};\r\n\r\n// Overload:function(predicate<element>)\r\n// Overload:function(predicate<element,index>)\r\nEnumerable.prototype.takeWhile = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext() && predicate(enumerator.current(), index++))\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(count)\r\nEnumerable.prototype.takeExceptLast = function (count) {\r\n    if (count == null) count = 1;\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        if (count <= 0) return source.getEnumerator(); // do nothing\r\n\r\n        var enumerator;\r\n        var q = [];\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (q.length == count) {\r\n                        q.push(enumerator.current());\r\n                        return this.yieldReturn(q.shift());\r\n                    }\r\n                    q.push(enumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.takeFromLast = function (count) {\r\n    if (count <= 0 || count == null) return Enumerable.empty();\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var sourceEnumerator;\r\n        var enumerator;\r\n        var q = [];\r\n\r\n        return new IEnumerator(\r\n            function () { sourceEnumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (sourceEnumerator.moveNext()) {\r\n                    if (q.length == count) q.shift();\r\n                    q.push(sourceEnumerator.current());\r\n                }\r\n                if (enumerator == null) {\r\n                    enumerator = Enumerable.from(q).getEnumerator();\r\n                }\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(item)\r\n// Overload:function(predicate)\r\nEnumerable.prototype.indexOf = function (item) {\r\n    var found = null;\r\n\r\n    // item as predicate\r\n    if (typeof (item) === Types.Function) {\r\n        this.forEach(function (x, i) {\r\n            if (item(x, i)) {\r\n                found = i;\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        this.forEach(function (x, i) {\r\n            if (x === item) {\r\n                found = i;\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return (found !== null) ? found : -1;\r\n};\r\n\r\n// Overload:function(item)\r\n// Overload:function(predicate)\r\nEnumerable.prototype.lastIndexOf = function (item) {\r\n    var result = -1;\r\n\r\n    // item as predicate\r\n    if (typeof (item) === Types.Function) {\r\n        this.forEach(function (x, i) {\r\n            if (item(x, i)) result = i;\r\n        });\r\n    }\r\n    else {\r\n        this.forEach(function (x, i) {\r\n            if (x === item) result = i;\r\n        });\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/* Convert Methods */\r\n\r\nEnumerable.prototype.cast = function () {\r\n    return this;\r\n};\r\n\r\nEnumerable.prototype.asEnumerable = function () {\r\n    return Enumerable.from(this);\r\n};\r\n\r\nEnumerable.prototype.toArray = function () {\r\n    var array = [];\r\n    this.forEach(function (x) { array.push(x); });\r\n    return array;\r\n};\r\n\r\n// Overload:function(keySelector)\r\n// Overload:function(keySelector, elementSelector)\r\n// Overload:function(keySelector, elementSelector, compareSelector)\r\nEnumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var dict = new Dictionary(compareSelector);\r\n    this.forEach(function (x) {\r\n        var key = keySelector(x);\r\n        var element = elementSelector(x);\r\n\r\n        var array = dict.get(key);\r\n        if (array !== undefined) array.push(element);\r\n        else dict.add(key, [element]);\r\n    });\r\n    return new Lookup(dict);\r\n};\r\n\r\nEnumerable.prototype.toObject = function (keySelector, elementSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n\r\n    var obj = {};\r\n    this.forEach(function (x) {\r\n        obj[keySelector(x)] = elementSelector(x);\r\n    });\r\n    return obj;\r\n};\r\n\r\n// Overload:function(keySelector, elementSelector)\r\n// Overload:function(keySelector, elementSelector, compareSelector)\r\nEnumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\r\n    keySelector = Utils.createLambda(keySelector);\r\n    elementSelector = Utils.createLambda(elementSelector);\r\n    compareSelector = Utils.createLambda(compareSelector);\r\n\r\n    var dict = new Dictionary(compareSelector);\r\n    this.forEach(function (x) {\r\n        dict.add(keySelector(x), elementSelector(x));\r\n    });\r\n    return dict;\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(replacer)\r\n// Overload:function(replacer, space)\r\nEnumerable.prototype.toJSONString = function (replacer, space) {\r\n    if (typeof JSON === Types.Undefined || JSON.stringify == null) {\r\n        throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\r\n    }\r\n    return JSON.stringify(this.toArray(), replacer, space);\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(separator)\r\n// Overload:function(separator,selector)\r\nEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n    if (separator == null) separator = \"\";\r\n    if (selector == null) selector = Functions.Identity;\r\n\r\n    return this.select(selector).toArray().join(separator);\r\n};\r\n\r\n\r\n/* Action Methods */\r\n\r\n// Overload:function(action<element>)\r\n// Overload:function(action<element,index>)\r\nEnumerable.prototype.doAction = function (action) {\r\n    var source = this;\r\n    action = Utils.createLambda(action);\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                if (enumerator.moveNext()) {\r\n                    action(enumerator.current(), index++);\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\n// Overload:function(action<element>)\r\n// Overload:function(action<element,index>)\r\n// Overload:function(func<element,bool>)\r\n// Overload:function(func<element,index,bool>)\r\nEnumerable.prototype.forEach = function (action) {\r\n    action = Utils.createLambda(action);\r\n\r\n    var index = 0;\r\n    var enumerator = this.getEnumerator();\r\n    try {\r\n        while (enumerator.moveNext()) {\r\n            if (action(enumerator.current(), index++) === false) break;\r\n        }\r\n    } finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(separator)\r\n// Overload:function(separator,selector)\r\nEnumerable.prototype.write = function (separator, selector) {\r\n    if (separator == null) separator = \"\";\r\n    selector = Utils.createLambda(selector);\r\n\r\n    var isFirst = true;\r\n    this.forEach(function (item) {\r\n        if (isFirst) isFirst = false;\r\n        else document.write(separator);\r\n        document.write(selector(item));\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.writeLine = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    this.forEach(function (item) {\r\n        document.writeln(selector(item) + \"<br />\");\r\n    });\r\n};\r\n\r\nEnumerable.prototype.force = function () {\r\n    var enumerator = this.getEnumerator();\r\n\r\n    try {\r\n        while (enumerator.moveNext()) {\r\n        }\r\n    }\r\n    finally {\r\n        Utils.dispose(enumerator);\r\n    }\r\n};\r\n\r\n/* Functional Methods */\r\n\r\nEnumerable.prototype.letBind = function (func) {\r\n    func = Utils.createLambda(func);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                enumerator = Enumerable.from(func(source)).getEnumerator();\r\n            },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.share = function () {\r\n    var source = this;\r\n    var sharedEnumerator;\r\n    var disposed = false;\r\n\r\n    return new DisposableEnumerable(function () {\r\n        return new IEnumerator(\r\n            function () {\r\n                if (sharedEnumerator == null) {\r\n                    sharedEnumerator = source.getEnumerator();\r\n                }\r\n            },\r\n            function () {\r\n                if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                return (sharedEnumerator.moveNext())\r\n                    ? this.yieldReturn(sharedEnumerator.current())\r\n                    : false;\r\n            },\r\n            Functions.Blank\r\n        );\r\n    }, function () {\r\n        disposed = true;\r\n        Utils.dispose(sharedEnumerator);\r\n    });\r\n};\r\n\r\nEnumerable.prototype.memoize = function () {\r\n    var source = this;\r\n    var cache;\r\n    var enumerator;\r\n    var disposed = false;\r\n\r\n    return new DisposableEnumerable(function () {\r\n        var index = -1;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                if (enumerator == null) {\r\n                    enumerator = source.getEnumerator();\r\n                    cache = [];\r\n                }\r\n            },\r\n            function () {\r\n                if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                index++;\r\n                if (cache.length <= index) {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(cache[index] = enumerator.current())\r\n                        : false;\r\n                }\r\n\r\n                return this.yieldReturn(cache[index]);\r\n            },\r\n            Functions.Blank\r\n        );\r\n    }, function () {\r\n        disposed = true;\r\n        Utils.dispose(enumerator);\r\n        cache = null;\r\n    });\r\n};\r\n\r\n/* Iterator (ES6 for..of) support */\r\nif (Utils.hasNativeIteratorSupport()) {\r\n    Enumerable.prototype[Symbol.iterator] = function () {\r\n        return {\r\n            enumerator: this.getEnumerator(),\r\n            next: function () {\r\n                if (this.enumerator.moveNext()) {\r\n                    return {\r\n                        done: false,\r\n                        value: this.enumerator.current()\r\n                    };\r\n                } else {\r\n                    return { done: true };\r\n                }\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\n/* Error Handling Methods */\r\n\r\nEnumerable.prototype.catchError = function (handler) {\r\n    handler = Utils.createLambda(handler);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                try {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                } catch (e) {\r\n                    handler(e);\r\n                    return false;\r\n                }\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    });\r\n};\r\n\r\nEnumerable.prototype.finallyAction = function (finallyAction) {\r\n    finallyAction = Utils.createLambda(finallyAction);\r\n    var source = this;\r\n\r\n    return new Enumerable(function () {\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                return (enumerator.moveNext())\r\n                    ? this.yieldReturn(enumerator.current())\r\n                    : false;\r\n            },\r\n            function () {\r\n                try {\r\n                    Utils.dispose(enumerator);\r\n                } finally {\r\n                    finallyAction();\r\n                }\r\n            });\r\n    });\r\n};\r\n\r\n/* For Debug Methods */\r\n\r\n// Overload:function()\r\n// Overload:function(selector)\r\nEnumerable.prototype.log = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return this.doAction(function (item) {\r\n        if (typeof console !== Types.Undefined) {\r\n            console.log(selector(item));\r\n        }\r\n    });\r\n};\r\n\r\n// Overload:function()\r\n// Overload:function(message)\r\n// Overload:function(message,selector)\r\nEnumerable.prototype.trace = function (message, selector) {\r\n    if (message == null) message = \"Trace\";\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return this.doAction(function (item) {\r\n        if (typeof console !== Types.Undefined) {\r\n            console.log(message, selector(item));\r\n        }\r\n    });\r\n};\r\n\r\n// private\r\n\r\nvar OrderedEnumerable = function (source, keySelector, comparer, descending, parent) {\r\n    this.source = source;\r\n    this.keySelector = Utils.createLambda(keySelector);\r\n    this.descending = descending;\r\n    this.parent = parent;\r\n\r\n    if (comparer)\r\n        this.comparer = Utils.createLambda(comparer);\r\n};\r\nOrderedEnumerable.prototype = new Enumerable();\r\n\r\nOrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, comparer, descending) {\r\n    return new OrderedEnumerable(this.source, keySelector, comparer, descending, this);\r\n};\r\n\r\nOrderedEnumerable.prototype.thenBy = function (keySelector, comparer) {\r\n    return this.createOrderedEnumerable(keySelector, comparer, false);\r\n};\r\n\r\nOrderedEnumerable.prototype.thenByDescending = function (keySelector, comparer) {\r\n    return this.createOrderedEnumerable(keySelector, comparer, true);\r\n};\r\n\r\nOrderedEnumerable.prototype.getEnumerator = function () {\r\n    var self = this;\r\n    var buffer;\r\n    var indexes;\r\n    var index = 0;\r\n\r\n    return new IEnumerator(\r\n        function () {\r\n            buffer = [];\r\n            indexes = [];\r\n            self.source.forEach(function (item, index) {\r\n                buffer.push(item);\r\n                indexes.push(index);\r\n            });\r\n            var sortContext = SortContext.create(self, null);\r\n            sortContext.GenerateKeys(buffer);\r\n\r\n            indexes.sort(function (a, b) { return sortContext.compare(a, b); });\r\n        },\r\n        function () {\r\n            return (index < indexes.length)\r\n                ? this.yieldReturn(buffer[indexes[index++]])\r\n                : false;\r\n        },\r\n        Functions.Blank\r\n    );\r\n};\r\n\r\nvar SortContext = function (keySelector, comparer, descending, child) {\r\n    this.keySelector = keySelector;\r\n    this.descending = descending;\r\n    this.child = child;\r\n    this.comparer = comparer;\r\n    this.keys = null;\r\n};\r\n\r\nSortContext.create = function (orderedEnumerable, currentContext) {\r\n    var context = new SortContext(\r\n        orderedEnumerable.keySelector, orderedEnumerable.comparer, orderedEnumerable.descending, currentContext\r\n    );\r\n\r\n    if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\r\n    return context;\r\n};\r\n\r\nSortContext.prototype.GenerateKeys = function (source) {\r\n    var len = source.length;\r\n    var keySelector = this.keySelector;\r\n    var keys = new Array(len);\r\n    for (var i = 0; i < len; i++) keys[i] = keySelector(source[i]);\r\n    this.keys = keys;\r\n\r\n    if (this.child != null) this.child.GenerateKeys(source);\r\n};\r\n\r\nSortContext.prototype.compare = function (index1, index2) {\r\n    var comparison = this.comparer ?\r\n        this.comparer(this.keys[index1], this.keys[index2]) :\r\n        Utils.compare(this.keys[index1], this.keys[index2]);\r\n\r\n    if (comparison == 0) {\r\n        if (this.child != null) return this.child.compare(index1, index2);\r\n        return Utils.compare(index1, index2);\r\n    }\r\n\r\n    return (this.descending) ? -comparison : comparison;\r\n};\r\n\r\nvar DisposableEnumerable = function (getEnumerator, dispose) {\r\n    this.dispose = dispose;\r\n    Enumerable.call(this, getEnumerator);\r\n};\r\nDisposableEnumerable.prototype = new Enumerable();\r\n\r\n// optimize array or arraylike object\r\n\r\nvar ArrayEnumerable = function (source) {\r\n    this.getSource = function () { return source; };\r\n};\r\nArrayEnumerable.prototype = new Enumerable();\r\n\r\nArrayEnumerable.prototype.any = function (predicate) {\r\n    return (predicate == null)\r\n        ? (this.getSource().length > 0)\r\n        : Enumerable.prototype.any.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.count = function (predicate) {\r\n    return (predicate == null)\r\n        ? this.getSource().length\r\n        : Enumerable.prototype.count.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.elementAt = function (index) {\r\n    var source = this.getSource();\r\n    return (0 <= index && index < source.length)\r\n        ? source[index]\r\n        : Enumerable.prototype.elementAt.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n    if (defaultValue === undefined) defaultValue = null;\r\n    var source = this.getSource();\r\n    return (0 <= index && index < source.length)\r\n        ? source[index]\r\n        : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.first = function (predicate) {\r\n    var source = this.getSource();\r\n    return (predicate == null && source.length > 0)\r\n        ? source[0]\r\n        : Enumerable.prototype.first.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        return Enumerable.prototype.firstOrDefault.apply(this, arguments);\r\n    }\r\n    defaultValue = predicate;\r\n\r\n    var source = this.getSource();\r\n    return source.length > 0 ? source[0] : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.last = function (predicate) {\r\n    var source = this.getSource();\r\n    return (predicate == null && source.length > 0)\r\n        ? source[source.length - 1]\r\n        : Enumerable.prototype.last.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n    if (predicate !== undefined) {\r\n        return Enumerable.prototype.lastOrDefault.apply(this, arguments);\r\n    }\r\n    defaultValue = predicate;\r\n\r\n    var source = this.getSource();\r\n    return source.length > 0 ? source[source.length - 1] : defaultValue;\r\n};\r\n\r\nArrayEnumerable.prototype.skip = function (count) {\r\n    var source = this.getSource();\r\n\r\n    return new Enumerable(function () {\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () { index = (count < 0) ? 0 : count; },\r\n            function () {\r\n                return (index < source.length)\r\n                    ? this.yieldReturn(source[index++])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nArrayEnumerable.prototype.takeExceptLast = function (count) {\r\n    if (count == null) count = 1;\r\n    return this.take(this.getSource().length - count);\r\n};\r\n\r\nArrayEnumerable.prototype.takeFromLast = function (count) {\r\n    return this.skip(this.getSource().length - count);\r\n};\r\n\r\nArrayEnumerable.prototype.reverse = function () {\r\n    var source = this.getSource();\r\n\r\n    return new Enumerable(function () {\r\n        var index;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                index = source.length;\r\n            },\r\n            function () {\r\n                return (index > 0)\r\n                    ? this.yieldReturn(source[--index])\r\n                    : false;\r\n            },\r\n            Functions.Blank);\r\n    });\r\n};\r\n\r\nArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n    if ((second instanceof ArrayEnumerable || second instanceof Array)\r\n        && compareSelector == null\r\n        && Enumerable.from(second).count() != this.count()) {\r\n        return false;\r\n    }\r\n\r\n    return Enumerable.prototype.sequenceEqual.apply(this, arguments);\r\n};\r\n\r\nArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n    var source = this.getSource();\r\n    if (selector != null || !(source instanceof Array)) {\r\n        return Enumerable.prototype.toJoinedString.apply(this, arguments);\r\n    }\r\n\r\n    if (separator == null) separator = \"\";\r\n    return source.join(separator);\r\n};\r\n\r\nArrayEnumerable.prototype.getEnumerator = function () {\r\n    var source = this.getSource();\r\n    var index = -1;\r\n\r\n    // fast and simple enumerator\r\n    return {\r\n        current: function () { return source[index]; },\r\n        moveNext: function () {\r\n            return ++index < source.length;\r\n        },\r\n        dispose: Functions.Blank\r\n    };\r\n};\r\n\r\n// optimization for multiple where and multiple select and whereselect\r\n\r\nvar WhereEnumerable = function (source, predicate) {\r\n    this.prevSource = source;\r\n    this.prevPredicate = predicate; // predicate.length always <= 1\r\n};\r\nWhereEnumerable.prototype = new Enumerable();\r\n\r\nWhereEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    if (predicate.length <= 1) {\r\n        var prevPredicate = this.prevPredicate;\r\n        var composedPredicate = function (x) { return prevPredicate(x) && predicate(x); };\r\n        return new WhereEnumerable(this.prevSource, composedPredicate);\r\n    }\r\n    else {\r\n        // if predicate use index, can't compose\r\n        return Enumerable.prototype.where.call(this, predicate);\r\n    }\r\n};\r\n\r\nWhereEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    return (selector.length <= 1)\r\n        ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector)\r\n        : Enumerable.prototype.select.call(this, selector);\r\n};\r\n\r\nWhereEnumerable.prototype.getEnumerator = function () {\r\n    var predicate = this.prevPredicate;\r\n    var source = this.prevSource;\r\n    var enumerator;\r\n\r\n    return new IEnumerator(\r\n        function () { enumerator = source.getEnumerator(); },\r\n        function () {\r\n            while (enumerator.moveNext()) {\r\n                if (predicate(enumerator.current())) {\r\n                    return this.yieldReturn(enumerator.current());\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        function () { Utils.dispose(enumerator); });\r\n};\r\n\r\nvar WhereSelectEnumerable = function (source, predicate, selector) {\r\n    this.prevSource = source;\r\n    this.prevPredicate = predicate; // predicate.length always <= 1 or null\r\n    this.prevSelector = selector; // selector.length always <= 1\r\n};\r\nWhereSelectEnumerable.prototype = new Enumerable();\r\n\r\nWhereSelectEnumerable.prototype.where = function (predicate) {\r\n    predicate = Utils.createLambda(predicate);\r\n\r\n    return (predicate.length <= 1)\r\n        ? new WhereEnumerable(this, predicate)\r\n        : Enumerable.prototype.where.call(this, predicate);\r\n};\r\n\r\nWhereSelectEnumerable.prototype.select = function (selector) {\r\n    selector = Utils.createLambda(selector);\r\n\r\n    if (selector.length <= 1) {\r\n        var prevSelector = this.prevSelector;\r\n        var composedSelector = function (x) { return selector(prevSelector(x)); };\r\n        return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\r\n    }\r\n    else {\r\n        // if selector use index, can't compose\r\n        return Enumerable.prototype.select.call(this, selector);\r\n    }\r\n};\r\n\r\nWhereSelectEnumerable.prototype.getEnumerator = function () {\r\n    var predicate = this.prevPredicate;\r\n    var selector = this.prevSelector;\r\n    var source = this.prevSource;\r\n    var enumerator;\r\n\r\n    return new IEnumerator(\r\n        function () { enumerator = source.getEnumerator(); },\r\n        function () {\r\n            while (enumerator.moveNext()) {\r\n                if (predicate == null || predicate(enumerator.current())) {\r\n                    return this.yieldReturn(selector(enumerator.current()));\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        function () { Utils.dispose(enumerator); });\r\n};\r\n\r\n// Collections\r\n\r\nvar Dictionary = (function () {\r\n    // static utility methods\r\n    var callHasOwnProperty = function (target, key) {\r\n        return Object.prototype.hasOwnProperty.call(target, key);\r\n    };\r\n\r\n    var computeHashCode = function (obj) {\r\n        if (obj === null) return \"null\";\r\n        if (obj === undefined) return \"undefined\";\r\n\r\n        return (typeof obj.toString === Types.Function)\r\n            ? obj.toString()\r\n            : Object.prototype.toString.call(obj);\r\n    };\r\n\r\n    // LinkedList for Dictionary\r\n    var HashEntry = function (key, value) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.prev = null;\r\n        this.next = null;\r\n    };\r\n\r\n    var EntryList = function () {\r\n        this.first = null;\r\n        this.last = null;\r\n    };\r\n    EntryList.prototype =\r\n    {\r\n        addLast: function (entry) {\r\n            if (this.last != null) {\r\n                this.last.next = entry;\r\n                entry.prev = this.last;\r\n                this.last = entry;\r\n            } else this.first = this.last = entry;\r\n        },\r\n\r\n        replace: function (entry, newEntry) {\r\n            if (entry.prev != null) {\r\n                entry.prev.next = newEntry;\r\n                newEntry.prev = entry.prev;\r\n            } else this.first = newEntry;\r\n\r\n            if (entry.next != null) {\r\n                entry.next.prev = newEntry;\r\n                newEntry.next = entry.next;\r\n            } else this.last = newEntry;\r\n\r\n        },\r\n\r\n        remove: function (entry) {\r\n            if (entry.prev != null) entry.prev.next = entry.next;\r\n            else this.first = entry.next;\r\n\r\n            if (entry.next != null) entry.next.prev = entry.prev;\r\n            else this.last = entry.prev;\r\n        }\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(compareSelector)\r\n    var Dictionary = function (compareSelector) {\r\n        this.countField = 0;\r\n        this.entryList = new EntryList();\r\n        this.buckets = {}; // as Dictionary<string,List<object>>\r\n        this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;\r\n    };\r\n    Dictionary.prototype =\r\n    {\r\n        add: function (key, value) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            var entry = new HashEntry(key, value);\r\n            if (callHasOwnProperty(this.buckets, hash)) {\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        this.entryList.replace(array[i], entry);\r\n                        array[i] = entry;\r\n                        return;\r\n                    }\r\n                }\r\n                array.push(entry);\r\n            } else {\r\n                this.buckets[hash] = [entry];\r\n            }\r\n            this.countField++;\r\n            this.entryList.addLast(entry);\r\n        },\r\n\r\n        get: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return undefined;\r\n\r\n            var array = this.buckets[hash];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var entry = array[i];\r\n                if (this.compareSelector(entry.key) === compareKey) return entry.value;\r\n            }\r\n            return undefined;\r\n        },\r\n\r\n        set: function (key, value) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (callHasOwnProperty(this.buckets, hash)) {\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        var newEntry = new HashEntry(key, value);\r\n                        this.entryList.replace(array[i], newEntry);\r\n                        array[i] = newEntry;\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        contains: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return false;\r\n\r\n            var array = this.buckets[hash];\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (this.compareSelector(array[i].key) === compareKey) return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        clear: function () {\r\n            this.countField = 0;\r\n            this.buckets = {};\r\n            this.entryList = new EntryList();\r\n        },\r\n\r\n        remove: function (key) {\r\n            var compareKey = this.compareSelector(key);\r\n            var hash = computeHashCode(compareKey);\r\n            if (!callHasOwnProperty(this.buckets, hash)) return;\r\n\r\n            var array = this.buckets[hash];\r\n            for (var i = 0; i < array.length; i++) {\r\n                if (this.compareSelector(array[i].key) === compareKey) {\r\n                    this.entryList.remove(array[i]);\r\n                    array.splice(i, 1);\r\n                    if (array.length == 0) delete this.buckets[hash];\r\n                    this.countField--;\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n\r\n        count: function () {\r\n            return this.countField;\r\n        },\r\n\r\n        toEnumerable: function () {\r\n            var self = this;\r\n            return new Enumerable(function () {\r\n                var currentEntry;\r\n\r\n                return new IEnumerator(\r\n                    function () { currentEntry = self.entryList.first; },\r\n                    function () {\r\n                        if (currentEntry != null) {\r\n                            var result = { key: currentEntry.key, value: currentEntry.value };\r\n                            currentEntry = currentEntry.next;\r\n                            return this.yieldReturn(result);\r\n                        }\r\n                        return false;\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n    };\r\n\r\n    return Dictionary;\r\n})();\r\n\r\n// dictionary = Dictionary<TKey, TValue[]>\r\nvar Lookup = function (dictionary) {\r\n    this.count = function () {\r\n        return dictionary.count();\r\n    };\r\n    this.get = function (key) {\r\n        return Enumerable.from(dictionary.get(key));\r\n    };\r\n    this.contains = function (key) {\r\n        return dictionary.contains(key);\r\n    };\r\n    this.toEnumerable = function () {\r\n        return dictionary.toEnumerable().select(function (kvp) {\r\n            return new Grouping(kvp.key, kvp.value);\r\n        });\r\n    };\r\n};\r\n\r\nvar Grouping = function (groupKey, elements) {\r\n    this.key = function () {\r\n        return groupKey;\r\n    };\r\n    ArrayEnumerable.call(this, elements);\r\n};\r\nGrouping.prototype = new ArrayEnumerable();\r\n\r\nexport default Enumerable;","<template>\r\n  <div class=\"about\">\r\n    <h1>This is an WorkListEx page</h1>\r\n    <div\r\n      v-for=\"(item, idx) in dataLIst\"\r\n      :key=\"idx\"\r\n    >\r\n      장비아이디: {{ item.equipment_id }} \r\n      장비명: {{ item.name }}\r\n      장비타입: {{ item.type }}\r\n      장비관련사고: {{ item.accident }}\r\n    </div>\r\n    <!--\r\n    <div\r\n      v-for=\"(item, idx) in workList\"\r\n      :key=\"idx\"\r\n    >\r\n      작업아이디: {{ item.work_id }} \r\n      작업명: {{ item.name }}\r\n      작업시간: {{ item.time }}\r\n    </div>\r\n    -->\r\n    <v-btn elevation=\"2\" @click=\"workerChange\">worker change</v-btn>\r\n  </div>\r\n</template>\r\n<script>\r\n// vuex 라이브러리에서 mapGetters 함수를 가져옵니다.\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport Enumerable  from 'linq'\r\n\r\n/*\r\n  namespaced: true를 사용했기 때문에 선언해줍니다.\r\n  index.js 에서 modules 객체의 '키' 이름입니다.\r\n\r\n  modules: {\r\n    키: 값\r\n    equipmentStore: equipmentStore,\r\n    workStore: workStore\r\n  }  \r\n*/\r\n\r\nconst equipmentStore = 'equipmentStore'\r\nconst workStore = 'workStore'\r\nconst workEquipmentStore = 'workEquipmentStore'\r\nconst workerStore = 'workerStore'\r\n\r\nexport default {\r\n  name: 'WorkLIstEx',\r\n  data() {\r\n    return {\r\n      dataLIst:[],\r\n      //\r\n    }\r\n  },\r\n  computed: {\r\n    /*\r\n      mapGetter는 store의 getters를 가져옵니다.\r\n\r\n      네임스페이스를 사용하기 때문에 키 이름을 적어줍니다. (equipmentStore, workStore)\r\n\r\n      2가지 방식으로 가져올 수 있습니다.\r\n      1) 이름 지정해서 가져오기\r\n      2) getters 이름 그대로 사용해서 가져오기\r\n    */\r\n    // 1) 이름 지정해서 가져오기\r\n    ...mapGetters(equipmentStore, [\r\n       'GE_EQUIPMENT_LIST'\r\n    ]),\r\n\r\n    // 2) getters 이름 그대로 사용해서 가져오기\r\n    ...mapGetters(workStore, [\r\n      'GE_WORK_LIST'\r\n    ]),    \r\n\r\n    ...mapGetters(workEquipmentStore, [\r\n      'GE_WORK_EQUIPMENT_LIST'\r\n    ]),    \r\n\r\n    ...mapGetters(workerStore, [\r\n      'GE_WORKER'\r\n    ]),    \r\n\r\n    // 스토어의 리스트 중에서 검색한 유저이름의 포스트 목록만 반환합니다.\r\n    equipmentList() {\r\n      let list = []\r\n\r\n      for(let item of this.GE_EQUIPMENT_LIST) {\r\n        //if(item.author == this.storeUserName) {\r\n          list.push(item)\r\n        //}\r\n      }\r\n\r\n      return list\r\n    },\r\n    workList() {\r\n      let list = []\r\n\r\n      for(let item of this.GE_WORK_LIST) {\r\n        //if(item.author == this.storeUserName) {\r\n          list.push(item)\r\n        //}\r\n      }\r\n\r\n      return list\r\n    }\r\n  },\r\n  watch: {\r\n    /*\r\n    // getters에 watch를 걸 수 있습니다.\r\n    storeUserName(val) {\r\n      this.userName = val\r\n    }\r\n    */\r\n  },  \r\n  created() {\r\n    //this.userName = this.storeUserName\r\n  },\r\n  mounted() {\r\n      //let result = Enumerable.range(1, 10).where(i => i % 3 == 0).select(i => i * 10);\r\n      //console.log(result.toArray()); // [ 30, 60, 90 ]\r\n\r\n      //let testQuery1 = this.GE_EQUIPMENT_LIST;\r\n      //console.log('testQuery1 : ' + JSON.stringify(testQuery1,null,2));  \r\n\r\n      let query1 = Enumerable.from(this.GE_EQUIPMENT_LIST).where(w=>w.type === 'protect').toArray();\r\n      console.log('query1.length : ' + query1.length);\r\n      \r\n      let query2 = Enumerable.from(this.GE_EQUIPMENT_LIST)\r\n                .join(this.GE_WORK_EQUIPMENT_LIST,\r\n                    pk => pk.equipment_id,\r\n                    fk => fk.equipment_id).toArray();\r\n      console.log('query2.length : ' + query2.length);\r\n\r\n      let query3 = Enumerable.from(this.GE_WORK_LIST)\r\n                .join(Enumerable.from(this.GE_EQUIPMENT_LIST)\r\n                    .join(this.GE_WORK_EQUIPMENT_LIST,\r\n                        pk=>pk.equipment_id,\r\n                        fk=>fk.equipment_id,\r\n                        (left, right) =>({...left, ...right})),\r\n                pk=>pk.work_id,\r\n                fk=>fk.work_id,\r\n                (left, right)=>({...left, ...right})).orderBy(o=>o.work_id).thenBy(o => o.equipment_id).toArray();\r\n      \r\n      \r\n      //this.dataLIst = query1;   \r\n      //console.log('query3 : ' + JSON.stringify(query3, null, 2));\r\n      console.log('query3.length : ' + query3.length);  \r\n\r\n      let query5 = Enumerable.from(this.GE_WORK_LIST)\r\n                .groupJoin(Enumerable.from(this.GE_EQUIPMENT_LIST)\r\n                    .join(this.GE_WORK_EQUIPMENT_LIST,\r\n                        pk=>pk.equipment_id,\r\n                        fk=>fk.equipment_id,\r\n                        (left, right) =>({...left, ...right})),\r\n                pk=>pk.work_id,\r\n                fk=>fk.work_id,\r\n                (work, items)=>({...work, items:items.toArray()})).where(w => w.work_id === 1).orderBy(o=>o.work_id).thenBy(o => o.equipment_id).toArray();\r\n      console.log('query5 : ' + JSON.stringify(query5, null, 2));\r\n      console.log('query5.length : ' + query5.length);  \r\n      //console.log('query5.items : ' + query5);  \r\n\r\n      query5.forEach(element => {\r\n        console.log( 'element:' + JSON.stringify(element) );\r\n        this.dataLIst = element.items;\r\n      });\r\n\r\n      console.log('this.GE_WORKER1 : ' + JSON.stringify(this.GE_WORKER));  \r\n      //this.dataLIst = query5;   \r\n\r\n\r\n},\r\n  methods: {\r\n    /*\r\n      mapGetter는 store의 getters를 가져옵니다.\r\n\r\n      네임스페이스를 사용하기 때문에 키 이름을 적어줍니다. (userStore, postStore)\r\n\r\n      2가지 방식으로 가져올 수 있습니다.\r\n      1) 이름 지정해서 가져오기\r\n      2) getters 이름 그대로 사용해서 가져오기      \r\n\r\n      개인의 취향이지만, getters 이름 그대로 사용하는 것을 추천드립니다.\r\n\r\n      다른 메소드 이름으로 매핑 예를 들면, setUserName: AC_USER_NAME 하면,\r\n      setUserName 함수가 나중에는 스토어 함수인지, 현재 파일의 함수인지 헷갈리는 경우가 있습니다.\r\n\r\n    ...mapActions(userStore, [\r\n      'AC_USER_NAME'\r\n    ]),\r\n    // 버튼을 클릭하면 수행됩니다.    \r\n    searchName() {\r\n      const payload = {\r\n        userName: this.userName\r\n      }\r\n      // store의 userName을 변경합니다.\r\n      this.AC_USER_NAME(payload)\r\n    }\r\n    */\r\n    ...mapActions(workerStore, [\r\n      'AC_WORKER'\r\n    ]),\r\n\r\n    workerChange() {\r\n        this.GE_WORKER.name='최강인';\r\n        this.AC_WORKER(this.GE_WORKER);\r\n    \r\n        console.log('this.GE_WORKER2 : ' + JSON.stringify(this.GE_WORKER));  \r\n    }\r\n    \r\n\r\n  }\r\n}\r\n\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkListEx.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WorkListEx.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WorkListEx.vue?vue&type=template&id=25db8af6&\"\nimport script from \"./WorkListEx.vue?vue&type=script&lang=js&\"\nexport * from \"./WorkListEx.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\ninstallComponents(component, {VBtn})\n"],"sourceRoot":""}